{"version":3,"file":"static/js/154.c895d1c8.chunk.js","mappings":"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","sources":["../node_modules/react-colorful/src/hooks/useEventCallback.ts","../node_modules/react-colorful/src/utils/clamp.ts","../node_modules/react-colorful/src/components/common/Interactive.tsx","../node_modules/react-colorful/src/utils/format.ts","../node_modules/react-colorful/src/components/common/Pointer.tsx","../node_modules/react-colorful/src/utils/round.ts","../node_modules/react-colorful/src/utils/convert.ts","../node_modules/react-colorful/src/components/common/Hue.tsx","../node_modules/react-colorful/src/components/common/Saturation.tsx","../node_modules/react-colorful/src/utils/compare.ts","../node_modules/react-colorful/src/hooks/useColorManipulation.ts","../node_modules/react-colorful/src/utils/nonce.ts","../node_modules/react-colorful/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-colorful/src/hooks/useStyleSheet.ts","../node_modules/react-colorful/src/components/common/ColorPicker.tsx","../node_modules/react-colorful/src/components/HexColorPicker.tsx","../node_modules/react-colorful/src/utils/validate.ts","../node_modules/react-colorful/src/components/common/ColorInput.tsx","../node_modules/react-colorful/src/components/HexColorInput.tsx","webpack://sverg84.github.io/./src/impl/styles/nav/colorPickerMenu.module.scss?0d60","impl/components/nav/PageNavColorPickerMenu.tsx"],"sourcesContent":["import { useRef } from \"react\";\n\n// Saves incoming handler to the ref in order to avoid \"useCallback hell\"\nexport function useEventCallback<T>(handler?: (value: T) => void): (value: T) => void {\n  const callbackRef = useRef(handler);\n  const fn = useRef((value: T) => {\n    callbackRef.current && callbackRef.current(value);\n  });\n  callbackRef.current = handler;\n\n  return fn.current;\n}\n","// Clamps a value between an upper and lower bound.\n// We use ternary operators because it makes the minified code\n// 2 times shorter then `Math.min(Math.max(a,b),c)`\nexport const clamp = (number: number, min = 0, max = 1): number => {\n  return number > max ? max : number < min ? min : number;\n};\n","import React, { useRef, useMemo, useEffect } from \"react\";\n\nimport { useEventCallback } from \"../../hooks/useEventCallback\";\nimport { clamp } from \"../../utils/clamp\";\n\nexport interface Interaction {\n  left: number;\n  top: number;\n}\n\n// Check if an event was triggered by touch\nconst isTouch = (event: MouseEvent | TouchEvent): event is TouchEvent => \"touches\" in event;\n\n// Finds a proper touch point by its identifier\nconst getTouchPoint = (touches: TouchList, touchId: null | number): Touch => {\n  for (let i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === touchId) return touches[i];\n  }\n  return touches[0];\n};\n\n// Finds the proper window object to fix iframe embedding issues\nconst getParentWindow = (node?: HTMLDivElement | null): Window => {\n  return (node && node.ownerDocument.defaultView) || self;\n};\n\n// Returns a relative position of the pointer inside the node's bounding box\nconst getRelativePosition = (\n  node: HTMLDivElement,\n  event: MouseEvent | TouchEvent,\n  touchId: null | number\n): Interaction => {\n  const rect = node.getBoundingClientRect();\n\n  // Get user's pointer position from `touches` array if it's a `TouchEvent`\n  const pointer = isTouch(event) ? getTouchPoint(event.touches, touchId) : (event as MouseEvent);\n\n  return {\n    left: clamp((pointer.pageX - (rect.left + getParentWindow(node).pageXOffset)) / rect.width),\n    top: clamp((pointer.pageY - (rect.top + getParentWindow(node).pageYOffset)) / rect.height),\n  };\n};\n\n// Browsers introduced an intervention, making touch events passive by default.\n// This workaround removes `preventDefault` call from the touch handlers.\n// https://github.com/facebook/react/issues/19651\nconst preventDefaultMove = (event: MouseEvent | TouchEvent): void => {\n  !isTouch(event) && event.preventDefault();\n};\n\n// Prevent mobile browsers from handling mouse events (conflicting with touch ones).\n// If we detected a touch interaction before, we prefer reacting to touch events only.\nconst isInvalid = (event: MouseEvent | TouchEvent, hasTouch: boolean): boolean => {\n  return hasTouch && !isTouch(event);\n};\n\ninterface Props {\n  onMove: (interaction: Interaction) => void;\n  onKey: (offset: Interaction) => void;\n  children: React.ReactNode;\n}\n\nconst InteractiveBase = ({ onMove, onKey, ...rest }: Props) => {\n  const container = useRef<HTMLDivElement>(null);\n  const onMoveCallback = useEventCallback<Interaction>(onMove);\n  const onKeyCallback = useEventCallback<Interaction>(onKey);\n  const touchId = useRef<null | number>(null);\n  const hasTouch = useRef(false);\n\n  const [handleMoveStart, handleKeyDown, toggleDocumentEvents] = useMemo(() => {\n    const handleMoveStart = ({ nativeEvent }: React.MouseEvent | React.TouchEvent) => {\n      const el = container.current;\n      if (!el) return;\n\n      // Prevent text selection\n      preventDefaultMove(nativeEvent);\n\n      if (isInvalid(nativeEvent, hasTouch.current) || !el) return;\n\n      if (isTouch(nativeEvent)) {\n        hasTouch.current = true;\n        const changedTouches = nativeEvent.changedTouches || [];\n        if (changedTouches.length) touchId.current = changedTouches[0].identifier;\n      }\n\n      el.focus();\n      onMoveCallback(getRelativePosition(el, nativeEvent, touchId.current));\n      toggleDocumentEvents(true);\n    };\n\n    const handleMove = (event: MouseEvent | TouchEvent) => {\n      // Prevent text selection\n      preventDefaultMove(event);\n\n      // If user moves the pointer outside of the window or iframe bounds and release it there,\n      // `mouseup`/`touchend` won't be fired. In order to stop the picker from following the cursor\n      // after the user has moved the mouse/finger back to the document, we check `event.buttons`\n      // and `event.touches`. It allows us to detect that the user is just moving his pointer\n      // without pressing it down\n      const isDown = isTouch(event) ? event.touches.length > 0 : event.buttons > 0;\n\n      if (isDown && container.current) {\n        onMoveCallback(getRelativePosition(container.current, event, touchId.current));\n      } else {\n        toggleDocumentEvents(false);\n      }\n    };\n\n    const handleMoveEnd = () => toggleDocumentEvents(false);\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n      const keyCode = event.which || event.keyCode;\n\n      // Ignore all keys except arrow ones\n      if (keyCode < 37 || keyCode > 40) return;\n      // Do not scroll page by arrow keys when document is focused on the element\n      event.preventDefault();\n      // Send relative offset to the parent component.\n      // We use codes (37←, 38↑, 39→, 40↓) instead of keys ('ArrowRight', 'ArrowDown', etc)\n      // to reduce the size of the library\n      onKeyCallback({\n        left: keyCode === 39 ? 0.05 : keyCode === 37 ? -0.05 : 0,\n        top: keyCode === 40 ? 0.05 : keyCode === 38 ? -0.05 : 0,\n      });\n    };\n\n    function toggleDocumentEvents(state?: boolean) {\n      const touch = hasTouch.current;\n      const el = container.current;\n      const parentWindow = getParentWindow(el);\n\n      // Add or remove additional pointer event listeners\n      const toggleEvent = state ? parentWindow.addEventListener : parentWindow.removeEventListener;\n      toggleEvent(touch ? \"touchmove\" : \"mousemove\", handleMove);\n      toggleEvent(touch ? \"touchend\" : \"mouseup\", handleMoveEnd);\n    }\n\n    return [handleMoveStart, handleKeyDown, toggleDocumentEvents];\n  }, [onKeyCallback, onMoveCallback]);\n\n  // Remove window event listeners before unmounting\n  useEffect(() => toggleDocumentEvents, [toggleDocumentEvents]);\n\n  return (\n    <div\n      {...rest}\n      onTouchStart={handleMoveStart}\n      onMouseDown={handleMoveStart}\n      className=\"react-colorful__interactive\"\n      ref={container}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"slider\"\n    />\n  );\n};\n\nexport const Interactive = React.memo(InteractiveBase);\n","export const formatClassName = (names: unknown[]): string => names.filter(Boolean).join(\" \");\n","import React from \"react\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props {\n  className?: string;\n  top?: number;\n  left: number;\n  color: string;\n}\n\nexport const Pointer = ({ className, color, left, top = 0.5 }: Props): JSX.Element => {\n  const nodeClassName = formatClassName([\"react-colorful__pointer\", className]);\n\n  const style = {\n    top: `${top * 100}%`,\n    left: `${left * 100}%`,\n  };\n\n  return (\n    <div className={nodeClassName} style={style}>\n      <div className=\"react-colorful__pointer-fill\" style={{ backgroundColor: color }} />\n    </div>\n  );\n};\n","export const round = (number: number, digits = 0, base = Math.pow(10, digits)): number => {\n  return Math.round(base * number) / base;\n};\n","import { round } from \"./round\";\nimport { RgbaColor, RgbColor, HslaColor, HslColor, HsvaColor, HsvColor } from \"../types\";\n\n/**\n * Valid CSS <angle> units.\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\n */\nconst angleUnits: Record<string, number> = {\n  grad: 360 / 400,\n  turn: 360,\n  rad: 360 / (Math.PI * 2),\n};\n\nexport const hexToHsva = (hex: string): HsvaColor => rgbaToHsva(hexToRgba(hex));\n\nexport const hexToRgba = (hex: string): RgbaColor => {\n  if (hex[0] === \"#\") hex = hex.substring(1);\n\n  if (hex.length < 6) {\n    return {\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n      a: hex.length === 4 ? round(parseInt(hex[3] + hex[3], 16) / 255, 2) : 1,\n    };\n  }\n\n  return {\n    r: parseInt(hex.substring(0, 2), 16),\n    g: parseInt(hex.substring(2, 4), 16),\n    b: parseInt(hex.substring(4, 6), 16),\n    a: hex.length === 8 ? round(parseInt(hex.substring(6, 8), 16) / 255, 2) : 1,\n  };\n};\n\nexport const parseHue = (value: string, unit = \"deg\"): number => {\n  return Number(value) * (angleUnits[unit] || 1);\n};\n\nexport const hslaStringToHsva = (hslString: string): HsvaColor => {\n  const matcher = /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hslString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hslStringToHsva = hslaStringToHsva;\n\nexport const hslaToHsva = ({ h, s, l, a }: HslaColor): HsvaColor => {\n  s *= (l < 50 ? l : 100 - l) / 100;\n\n  return {\n    h: h,\n    s: s > 0 ? ((2 * s) / (l + s)) * 100 : 0,\n    v: l + s,\n    a,\n  };\n};\n\nexport const hsvaToHex = (hsva: HsvaColor): string => rgbaToHex(hsvaToRgba(hsva));\n\nexport const hsvaToHsla = ({ h, s, v, a }: HsvaColor): HslaColor => {\n  const hh = ((200 - s) * v) / 100;\n\n  return {\n    h: round(h),\n    s: round(hh > 0 && hh < 200 ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0),\n    l: round(hh / 2),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToHslString = (hsva: HsvaColor): string => {\n  const { h, s, l } = hsvaToHsla(hsva);\n  return `hsl(${h}, ${s}%, ${l}%)`;\n};\n\nexport const hsvaToHsvString = (hsva: HsvaColor): string => {\n  const { h, s, v } = roundHsva(hsva);\n  return `hsv(${h}, ${s}%, ${v}%)`;\n};\n\nexport const hsvaToHsvaString = (hsva: HsvaColor): string => {\n  const { h, s, v, a } = roundHsva(hsva);\n  return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n};\n\nexport const hsvaToHslaString = (hsva: HsvaColor): string => {\n  const { h, s, l, a } = hsvaToHsla(hsva);\n  return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n};\n\nexport const hsvaToRgba = ({ h, s, v, a }: HsvaColor): RgbaColor => {\n  h = (h / 360) * 6;\n  s = s / 100;\n  v = v / 100;\n\n  const hh = Math.floor(h),\n    b = v * (1 - s),\n    c = v * (1 - (h - hh) * s),\n    d = v * (1 - (1 - h + hh) * s),\n    module = hh % 6;\n\n  return {\n    r: round([v, c, b, b, d, v][module] * 255),\n    g: round([d, v, v, c, b, b][module] * 255),\n    b: round([b, b, d, v, v, c][module] * 255),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToRgbString = (hsva: HsvaColor): string => {\n  const { r, g, b } = hsvaToRgba(hsva);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nexport const hsvaToRgbaString = (hsva: HsvaColor): string => {\n  const { r, g, b, a } = hsvaToRgba(hsva);\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\n\nexport const hsvaStringToHsva = (hsvString: string): HsvaColor => {\n  const matcher = /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hsvString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return roundHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    v: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hsvStringToHsva = hsvaStringToHsva;\n\nexport const rgbaStringToHsva = (rgbaString: string): HsvaColor => {\n  const matcher = /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(rgbaString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? 100 : 1),\n  });\n};\n\nexport const rgbStringToHsva = rgbaStringToHsva;\n\nconst format = (number: number) => {\n  const hex = number.toString(16);\n  return hex.length < 2 ? \"0\" + hex : hex;\n};\n\nexport const rgbaToHex = ({ r, g, b, a }: RgbaColor): string => {\n  const alphaHex = a < 1 ? format(round(a * 255)) : \"\";\n  return \"#\" + format(r) + format(g) + format(b) + alphaHex;\n};\n\nexport const rgbaToHsva = ({ r, g, b, a }: RgbaColor): HsvaColor => {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  // prettier-ignore\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n        ? 2 + (b - r) / delta\n        : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: round(60 * (hh < 0 ? hh + 6 : hh)),\n    s: round(max ? (delta / max) * 100 : 0),\n    v: round((max / 255) * 100),\n    a,\n  };\n};\n\nexport const roundHsva = (hsva: HsvaColor): HsvaColor => ({\n  h: round(hsva.h),\n  s: round(hsva.s),\n  v: round(hsva.v),\n  a: round(hsva.a, 2),\n});\n\nexport const rgbaToRgb = ({ r, g, b }: RgbaColor): RgbColor => ({ r, g, b });\n\nexport const hslaToHsl = ({ h, s, l }: HslaColor): HslColor => ({ h, s, l });\n\nexport const hsvaToHsv = (hsva: HsvaColor): HsvColor => {\n  const { h, s, v } = roundHsva(hsva);\n  return { h, s, v };\n};\n","import React from \"react\";\n\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\n\nimport { hsvaToHslString } from \"../../utils/convert\";\nimport { formatClassName } from \"../../utils/format\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\n\ninterface Props {\n  className?: string;\n  hue: number;\n  onChange: (newHue: { h: number }) => void;\n}\n\nconst HueBase = ({ className, hue, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({ h: 360 * interaction.left });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Hue measured in degrees of the color circle ranging from 0 to 360\n    onChange({\n      h: clamp(hue + offset.left * 360, 0, 360),\n    });\n  };\n\n  const nodeClassName = formatClassName([\"react-colorful__hue\", className]);\n\n  return (\n    <div className={nodeClassName}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Hue\"\n        aria-valuenow={round(hue)}\n        aria-valuemax=\"360\"\n        aria-valuemin=\"0\"\n      >\n        <Pointer\n          className=\"react-colorful__hue-pointer\"\n          left={hue / 360}\n          color={hsvaToHslString({ h: hue, s: 100, v: 100, a: 1 })}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Hue = React.memo(HueBase);\n","import React from \"react\";\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\nimport { HsvaColor } from \"../../types\";\nimport { hsvaToHslString } from \"../../utils/convert\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\n\ninterface Props {\n  hsva: HsvaColor;\n  onChange: (newColor: { s: number; v: number }) => void;\n}\n\nconst SaturationBase = ({ hsva, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({\n      s: interaction.left * 100,\n      v: 100 - interaction.top * 100,\n    });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Saturation and brightness always fit into [0, 100] range\n    onChange({\n      s: clamp(hsva.s + offset.left * 100, 0, 100),\n      v: clamp(hsva.v - offset.top * 100, 0, 100),\n    });\n  };\n\n  const containerStyle = {\n    backgroundColor: hsvaToHslString({ h: hsva.h, s: 100, v: 100, a: 1 }),\n  };\n\n  return (\n    <div className=\"react-colorful__saturation\" style={containerStyle}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Color\"\n        aria-valuetext={`Saturation ${round(hsva.s)}%, Brightness ${round(hsva.v)}%`}\n      >\n        <Pointer\n          className=\"react-colorful__saturation-pointer\"\n          top={1 - hsva.v / 100}\n          left={hsva.s / 100}\n          color={hsvaToHslString(hsva)}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Saturation = React.memo(SaturationBase);\n","import { hexToRgba } from \"./convert\";\nimport { ObjectColor } from \"../types\";\n\nexport const equalColorObjects = (first: ObjectColor, second: ObjectColor): boolean => {\n  if (first === second) return true;\n\n  for (const prop in first) {\n    // The following allows for a type-safe calling of this function (first & second have to be HSL, HSV, or RGB)\n    // with type-unsafe iterating over object keys. TS does not allow this without an index (`[key: string]: number`)\n    // on an object to define how iteration is normally done. To ensure extra keys are not allowed on our types,\n    // we must cast our object to unknown (as RGB demands `r` be a key, while `Record<string, x>` does not care if\n    // there is or not), and then as a type TS can iterate over.\n    if (\n      ((first as unknown) as Record<string, number>)[prop] !==\n      ((second as unknown) as Record<string, number>)[prop]\n    )\n      return false;\n  }\n\n  return true;\n};\n\nexport const equalColorString = (first: string, second: string): boolean => {\n  return first.replace(/\\s/g, \"\") === second.replace(/\\s/g, \"\");\n};\n\nexport const equalHex = (first: string, second: string): boolean => {\n  if (first.toLowerCase() === second.toLowerCase()) return true;\n\n  // To compare colors like `#FFF` and `ffffff` we convert them into RGB objects\n  return equalColorObjects(hexToRgba(first), hexToRgba(second));\n};\n","import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { ColorModel, AnyColor, HsvaColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { useEventCallback } from \"./useEventCallback\";\n\nexport function useColorManipulation<T extends AnyColor>(\n  colorModel: ColorModel<T>,\n  color: T,\n  onChange?: (color: T) => void\n): [HsvaColor, (color: Partial<HsvaColor>) => void] {\n  // Save onChange callback in the ref for avoiding \"useCallback hell\"\n  const onChangeCallback = useEventCallback<T>(onChange);\n\n  // No matter which color model is used (HEX, RGB(A) or HSL(A)),\n  // all internal calculations are based on HSVA model\n  const [hsva, updateHsva] = useState<HsvaColor>(() => colorModel.toHsva(color));\n\n  // By using this ref we're able to prevent extra updates\n  // and the effects recursion during the color conversion\n  const cache = useRef({ color, hsva });\n\n  // Update local HSVA-value if `color` property value is changed,\n  // but only if that's not the same color that we just sent to the parent\n  useEffect(() => {\n    if (!colorModel.equal(color, cache.current.color)) {\n      const newHsva = colorModel.toHsva(color);\n      cache.current = { hsva: newHsva, color };\n      updateHsva(newHsva);\n    }\n  }, [color, colorModel]);\n\n  // Trigger `onChange` callback only if an updated color is different from cached one;\n  // save the new color to the ref to prevent unnecessary updates\n  useEffect(() => {\n    let newColor;\n    if (\n      !equalColorObjects(hsva, cache.current.hsva) &&\n      !colorModel.equal((newColor = colorModel.fromHsva(hsva)), cache.current.color)\n    ) {\n      cache.current = { hsva, color: newColor };\n      onChangeCallback(newColor);\n    }\n  }, [hsva, colorModel, onChangeCallback]);\n\n  // Merge the current HSVA color object with updated params.\n  // For example, when a child component sends `h` or `s` only\n  const handleChange = useCallback((params: Partial<HsvaColor>) => {\n    updateHsva((current) => Object.assign({}, current, params));\n  }, []);\n\n  return [hsva, handleChange];\n}\n","declare const __webpack_nonce__: string | undefined;\nlet nonce: string | undefined;\n\n/**\n * Returns a nonce hash included by Webpack or the one defined manually by developer.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n * https://webpack.js.org/guides/csp/\n */\nexport const getNonce = (): string | undefined => {\n  if (nonce) return nonce;\n  if (typeof __webpack_nonce__ !== \"undefined\") return __webpack_nonce__;\n  return undefined;\n};\n\n/**\n * Signs the style tag with a base64-encoded string (nonce) to conforms to Content Security Policies.\n * This function has to be invoked before any picker is rendered if you aren't using Webpack for CSP.\n */\nexport const setNonce = (hash: string): void => {\n  nonce = hash;\n};\n","import { useLayoutEffect, useEffect } from \"react\";\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n","import { RefObject } from \"react\";\n\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { getNonce } from \"../utils/nonce\";\n\n// Bundler is configured to load this as a processed minified CSS-string\nimport styles from \"../css/styles.css\";\n\nconst styleElementMap: Map<Document, HTMLStyleElement> = new Map();\n\n/**\n * Injects CSS code into the document's <head>\n */\nexport const useStyleSheet = (nodeRef: RefObject<HTMLDivElement>): void => {\n  useIsomorphicLayoutEffect(() => {\n    const parentDocument = nodeRef.current ? nodeRef.current.ownerDocument : document;\n\n    if (typeof parentDocument !== \"undefined\" && !styleElementMap.has(parentDocument)) {\n      const styleElement = parentDocument.createElement(\"style\");\n      styleElement.innerHTML = styles;\n      styleElementMap.set(parentDocument, styleElement);\n\n      // Conform to CSP rules by setting `nonce` attribute to the inline styles\n      const nonce = getNonce();\n      if (nonce) styleElement.setAttribute(\"nonce\", nonce);\n\n      parentDocument.head.appendChild(styleElement);\n    }\n  }, []);\n};\n","import React, { useRef } from \"react\";\n\nimport { Hue } from \"./Hue\";\nimport { Saturation } from \"./Saturation\";\n\nimport { ColorModel, ColorPickerBaseProps, AnyColor } from \"../../types\";\nimport { useColorManipulation } from \"../../hooks/useColorManipulation\";\nimport { useStyleSheet } from \"../../hooks/useStyleSheet\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props<T extends AnyColor> extends Partial<ColorPickerBaseProps<T>> {\n  colorModel: ColorModel<T>;\n}\n\nexport const ColorPicker = <T extends AnyColor>({\n  className,\n  colorModel,\n  color = colorModel.defaultColor,\n  onChange,\n  ...rest\n}: Props<T>): JSX.Element => {\n  const nodeRef = useRef<HTMLDivElement>(null);\n  useStyleSheet(nodeRef);\n\n  const [hsva, updateHsva] = useColorManipulation<T>(colorModel, color, onChange);\n\n  const nodeClassName = formatClassName([\"react-colorful\", className]);\n\n  return (\n    <div {...rest} ref={nodeRef} className={nodeClassName}>\n      <Saturation hsva={hsva} onChange={updateHsva} />\n      <Hue hue={hsva.h} onChange={updateHsva} className=\"react-colorful__last-control\" />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { ColorPicker } from \"./common/ColorPicker\";\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\nimport { equalHex } from \"../utils/compare\";\nimport { hexToHsva, hsvaToHex } from \"../utils/convert\";\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"000\",\n  toHsva: hexToHsva,\n  fromHsva: ({ h, s, v }) => hsvaToHex({ h, s, v, a: 1 }),\n  equal: equalHex,\n};\n\nexport const HexColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\n  <ColorPicker {...props} colorModel={colorModel} />\n);\n","const matcher = /^#?([0-9A-F]{3,8})$/i;\n\nexport const validHex = (value: string, alpha?: boolean): boolean => {\n  const match = matcher.exec(value);\n  const length = match ? match[1].length : 0;\n\n  return (\n    length === 3 || // '#rgb' format\n    length === 6 || // '#rrggbb' format\n    (!!alpha && length === 4) || // '#rgba' format\n    (!!alpha && length === 8) // '#rrggbbaa' format\n  );\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { useEventCallback } from \"../../hooks/useEventCallback\";\nimport { ColorInputBaseProps } from \"../../types\";\n\ninterface Props extends ColorInputBaseProps {\n  /** Blocks typing invalid characters and limits string length */\n  escape: (value: string) => string;\n  /** Checks that value is valid color string */\n  validate: (value: string) => boolean;\n  /** Processes value before displaying it in the input */\n  format?: (value: string) => string;\n  /** Processes value before sending it in `onChange` */\n  process?: (value: string) => string;\n}\n\nexport const ColorInput = (props: Props): JSX.Element => {\n  const { color = \"\", onChange, onBlur, escape, validate, format, process, ...rest } = props;\n  const [value, setValue] = useState(() => escape(color));\n  const onChangeCallback = useEventCallback<string>(onChange);\n  const onBlurCallback = useEventCallback<React.FocusEvent<HTMLInputElement>>(onBlur);\n\n  // Trigger `onChange` handler only if the input value is a valid color\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const inputValue = escape(e.target.value);\n      setValue(inputValue);\n      if (validate(inputValue)) onChangeCallback(process ? process(inputValue) : inputValue);\n    },\n    [escape, process, validate, onChangeCallback]\n  );\n\n  // Take the color from props if the last typed color (in local state) is not valid\n  const handleBlur = useCallback(\n    (e: React.FocusEvent<HTMLInputElement>) => {\n      if (!validate(e.target.value)) setValue(escape(color));\n      onBlurCallback(e);\n    },\n    [color, escape, validate, onBlurCallback]\n  );\n\n  // Update the local state when `color` property value is changed\n  useEffect(() => {\n    setValue(escape(color));\n  }, [color, escape]);\n\n  return (\n    <input\n      {...rest}\n      value={format ? format(value) : value}\n      spellCheck=\"false\" // the element should not be checked for spelling errors\n      onChange={handleChange}\n      onBlur={handleBlur}\n    />\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { ColorInputBaseProps } from \"../types\";\n\nimport { validHex } from \"../utils/validate\";\nimport { ColorInput } from \"./common/ColorInput\";\n\ninterface HexColorInputProps extends ColorInputBaseProps {\n  /** Enables `#` prefix displaying */\n  prefixed?: boolean;\n  /** Allows `#rgba` and `#rrggbbaa` color formats */\n  alpha?: boolean;\n}\n\n/** Adds \"#\" symbol to the beginning of the string */\nconst prefix = (value: string) => \"#\" + value;\n\nexport const HexColorInput = (props: HexColorInputProps): JSX.Element => {\n  const { prefixed, alpha, ...rest } = props;\n\n  /** Escapes all non-hexadecimal characters including \"#\" */\n  const escape = useCallback(\n    (value: string) => value.replace(/([^0-9A-F]+)/gi, \"\").substring(0, alpha ? 8 : 6),\n    [alpha]\n  );\n\n  /** Validates hexadecimal strings */\n  const validate = useCallback((value: string) => validHex(value, alpha), [alpha]);\n\n  return (\n    <ColorInput\n      {...rest}\n      escape={escape}\n      format={prefixed ? prefix : undefined}\n      process={prefix}\n      validate={validate}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"colorPickerMenu_header__OJJvr\",\"picker\":\"colorPickerMenu_picker__6xE7X\",\"dropdown\":\"colorPickerMenu_dropdown__qTmIa\"};","import * as React from 'react';\nimport NavDropdown from 'react-bootstrap/esm/NavDropdown';\nimport { HexColorInput, HexColorPicker } from 'react-colorful';\n\nimport ColorContext from '../../contexts/ColorContext';\nimport styles from '../../styles/nav/colorPickerMenu.module.scss';\n\nexport default function PageNavColorPickerMenu(): React.JSX.Element {\n\tconst {color, setColor} = React.useContext(ColorContext);\n\n\treturn (\n\t\t<>\n\t\t\t<NavDropdown.Header className={styles.header}>\n\t\t\t\tColor Picker\n\t\t\t</NavDropdown.Header>\n\t\t\t<div className={styles.picker}>\n\t\t\t\t<HexColorPicker\n\t\t\t\t\tcolor={color}\n\t\t\t\t\tonChange={setColor}\n\t\t\t\t/>\n\t\t\t\t<HexColorInput\n\t\t\t\t\tcolor={color}\n\t\t\t\t\tonChange={setColor}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"],"names":["i","e","t","r","n","current","s","f","v","ownerDocument","defaultView","self","d","getBoundingClientRect","o","length","identifier","touches","left","pageX","pageXOffset","width","top","pageY","pageYOffset","height","h","preventDefault","m","a","onMove","l","onKey","c","g","p","b","_","x","buttons","addEventListener","removeEventListener","nativeEvent","changedTouches","focus","which","keyCode","C","E","H","u","onTouchStart","onMouseDown","className","ref","onKeyDown","tabIndex","role","filter","Boolean","join","color","style","backgroundColor","Math","pow","round","PI","L","substring","parseInt","w","K","I","y","q","floor","D","toString","max","min","S","hue","onChange","T","hsva","F","X","toLowerCase","Y","toHsva","equal","fromHsva","Object","assign","R","V","window","J","Map","Q","document","has","createElement","innerHTML","set","__webpack_nonce__","setAttribute","head","appendChild","U","colorModel","defaultColor","W","Z","qe","ke","onBlur","escape","validate","format","process","target","value","spellCheck","Ie","Oe","prefixed","alpha","replace","exec","PageNavColorPickerMenu","setColor","React","ColorContext","_jsxs","_Fragment","children","_jsx","NavDropdown","Header","styles","header","picker","HexColorPicker","HexColorInput"],"sourceRoot":""}